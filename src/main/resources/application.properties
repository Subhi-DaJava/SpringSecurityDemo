# Cela dirigera directement les utilisateurs OAuth vers le serveur d’autorisation approprié. définir GitHub en tant que page de connexion OAuth 2.0
# L’application web client transmet l’identité client et le client secret à GitHub, pour la connecter et créer un formulaire d’authentification OAuth 2.0
# pour votre app client sur le serveur d’autorisation GitHub.
spring.security.oauth2.client.registration.github.client-id=
spring.security.oauth2.client.registration.github.client-secret=

spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
# La clé pour ajouter OpenID Connect à votre requête originale dans le serveur de connexion est le scope pour openid, ainsi que les claims.
# openid en tant que scope ; profil et email en tant que claims.

spring.security.oauth2.client.registration.google.scope=openid,profile,email
